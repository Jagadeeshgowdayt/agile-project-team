name: "Frontend CI & Performance Tests"

on:
  push:
    branches: ['main', 'release/**']
  pull_request:
    branches: ['main', 'release/**']
  workflow_dispatch:

jobs:
  html-lint:
    name: "HTML Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: "Install htmlhint"
        run: npm install -g htmlhint

      - name: "Run htmlhint"
        run: htmlhint "**/*.html"

  css-lint:
    name: "CSS Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: "Install csslint"
        run: npm install -g csslint

      - name: "Run csslint"
        run: csslint "**/*.css"

  js-lint:
    name: "JavaScript Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: "Configure JSHint for ES6"
        run: |
          echo '{"esversion": 6}' > .jshintrc
          cat .jshintrc

      - name: "Install jshint"
        run: npm install -g jshint

      - name: "Run jshint"
        run: |
          FILES=$(find . -type f -name '*.js' | grep -v 'node_modules')
          if [ -n "$FILES" ]; then
            jshint $FILES;
          else
            echo "No JS files to lint";
          fi

  perf-test:
    name: "Performance Test"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Start HTTP server"
        run: |
          python3 -m http.server 8000 & SERVER_PID=$! && sleep 2

      - name: "Measure response times"
        run: |
          URL="http://localhost:8000/index.html"
          echo "Measuring response times for $URL"
          for i in {1..5}; do
            curl -o /dev/null -s -w "Request $i: %{time_total}s\n" "$URL";
          done

      - name: "Stop HTTP server"
        if: always()
        run: kill $SERVER_PID

      - name: "Finalize"
        run: echo "Frontend CI & Performance Tests completed successfully"

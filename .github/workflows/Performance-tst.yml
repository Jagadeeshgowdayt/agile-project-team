name: "Basic Frontend Performance & Best Practices Check"

on:
  push:
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
  workflow_dispatch:

jobs:
  performance-and-practices:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start simple HTTP server üåê
        run: |
          python3 -m http.server 8000 &
          sleep 3  # wait for server

      - name: Safe Resource Size Check üóÇÔ∏è
        run: |
          set +e  # continue on errors
          echo "Checking JS/CSS resource sizes..."
          for FILE in $(find . -maxdepth 1 -name '*.js' -o -name '*.css'); do
            [ -f "$FILE" ] || continue
            SIZE_KB=$(du -k "$FILE" | cut -f1)
            echo "$FILE: ${SIZE_KB}KB"
            if [ "$SIZE_KB" -gt 100 ]; then
              echo "üîî $FILE is larger than 100KB."
            fi
          done

      - name: Safe Image Size Check üì∑
        run: |
          set +e
          echo "Checking image sizes..."
          for IMG in $(find . -maxdepth 1 -name '*.png' -o -name '*.jpg' -o -name '*.jpeg'); do
            [ -f "$IMG" ] || continue
            IMG_SIZE_KB=$(du -k "$IMG" | cut -f1)
            echo "$IMG: ${IMG_SIZE_KB}KB"
            if [ "$IMG_SIZE_KB" -gt 300 ]; then
              echo "üîî Large image detected: $IMG"
            fi
          done

      - name: Check for Minification (CSS/JS) ‚öôÔ∏è
        run: |
          set +e
          echo "Checking for minified assets..."
          for FILE in *.css *.js; do
            [ -f "$FILE" ] || continue
            if ! grep -q "min\." "$FILE"; then
              echo "üîî $FILE may not be minified."
            fi
          done

      - name: Forced Success ü§ñ
        run: |
          echo "‚úÖ All checks completed. No errors will stop this workflow."
          exit 0
